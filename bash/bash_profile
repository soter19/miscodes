#Network
alias dnsflush="sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder;"
alias myip="curl ip.appspot.com"
alias editHosts='sudo edit /etc/hosts'

#System
alias ls="ls -G"
alias lockdown="/System/Library/CoreServices/'Menu Extras'/User.menu/Contents/Resources/CGSession -suspend"
alias bashprofile="vim ~/.bash_profile"
alias rbashprofile="source ~/.bash_profile && clear"
cd() { builtin cd "$@"; ls; }
spotlight () { mdfind "kMDItemDisplayName == '$@'wc"; }

#Colors
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced

# Misc
alias nyan="telnet nyancat.dakko.us"
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'' | less'


#iTerm Shit
test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

#RubyEnv
if which rbenv > /dev/null;
	then eval "$(rbenv init -)";
fi

#Paths
export PATH="$HOME/.rbenv/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"

#Terminal Look&Feel

# Extract
extract () {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
             esac
         else
             echo "'$1' is not a valid file"
         fi
    }


# Useful host related information
ii() {
	  echo -e "\nYou are logged on ${RED}$HOST"
	  echo -e "\nAdditionnal information:$NC " ; uname -a
	  echo -e "\n${RED}Users logged on:$NC " ; w -h
	  echo -e "\n${RED}Current date :$NC " ; date
	  echo -e "\n${RED}Machine stats :$NC " ; uptime
	  echo -e "\n${RED}Current network location :$NC " ; scselect
	  echo -e "\n${RED}Public facing IP Address :$NC " ;myip
	  #echo -e "\n${RED}DNS Configuration:$NC " ; scutil --dns
	  echo
  }
